function diralias() {
    # determine where the aliases are
    if [ -z "${DIRALIAS}" ]; then
        export DIRALIAS="${HOME}/.diraliases"
    fi

    if [ ! -f "$DIRALIAS" ]; then
        touch "${DIRALIAS}"
    fi

    alias=
    path=
    if [[ $# == 0 ]]; then
        cat "${DIRALIAS}" | sort
        return
    elif [[ $# == 1 ]]; then
        alias=$1
    else
        alias=$1
        path=$2
    fi

    # check if aliases file already exists
    key=$(grep "^${alias}=" ${DIRALIAS})
    if [ -n "${path}" ] && [ -n "${key}" ]; then
        # replace value -- using semicolon as delim to avoid
        # conflicts with /
        sed -i.bak -r "s;(${alias}=).*;\1${path};" ${DIRALIAS}
        rm -f "${DIRALIAS}.bak"
        echo "Replaced alias '${alias}' for '${path}'"
    elif [ -n "${path}" ]; then
        # add new value
        echo "${alias}=${path}" >> ${DIRALIAS}
        echo "Added alias '${alias}' for '${path}'"
    elif [ -n "${key}" ]; then
        echo "diralias is ${key}"
    else
        echo "unknown alias ${alias}"
    fi
}

function go() {
    # validation check
    if [[ $# < 1 ]]; then
        echo "usage: diralias <alias>"
        return
    fi

    alias=$1

    # determine where the aliases are
    if [ -z "${DIRALIAS}" ]; then
        export DIRALIAS="${HOME}/.diraliases"
    fi

    # check if aliases file already exists
    keyval=
    if [ ! -f "$DIRALIAS" ]; then
        echo "unknown diralias '${alias}'"
    else
        # check if key already exists
        keyval=$(grep "^${alias}=" ${DIRALIAS} | cut -d"=" -f2)
    fi

    if [ -z ${keyval} ]; then
        echo "unknown diralias '${alias}'"
    else
        cd "${keyval}"
    fi
}

function pathappend() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="${PATH:+"$PATH:"}$ARG"
    fi
  done
}

function pathprepend() {
  for ARG in "$@"
  do
    if [ -d "$ARG" ] && [[ ":$PATH:" != *":$ARG:"* ]]; then
        PATH="$ARG${PATH:+":$PATH"}"
    fi
  done
}

